#language extension is first, separated by underscore
#all languages have default, operators, numbers, strings then any word can be added after 'custom'

#C

c_default : 255 255 255
c_operators : 255 149 143
c_numbers : 255 197 143
c_strings : 209 241 169

c_custom_struct : 235 187 255
c_custom_typedef : 235 187 255
c_custom_for : 235 187 255
c_custom_while : 235 187 255
c_custom_switch : 235 187 255
c_custom_case : 235 187 255
c_custom_break : 235 187 255
c_custom_continue : 235 187 255
c_custom_default : 235 187 255
c_custom_return : 235 187 255
c_custom_if : 235 187 255
c_custom_union : 235 187 255

c_custom_int : 187 218 255
c_custom_char : 187 218 255
c_custom_short : 187 218 255
c_custom_long : 187 218 255
c_custom_double : 187 218 255
c_custom_float : 187 218 255
c_custom_void : 187 218 255

c_custom_u8 : 187 218 255
c_custom_u16 : 187 218 255
c_custom_u32 : 187 218 255
c_custom_u64 : 187 218 2555
c_custom_s8 : 187 218 255
c_custom_s16 : 187 218 255
c_custom_s32 : 187 218 255
c_custom_s64 : 187 218 255
c_custom_r32 : 187 218 255
c_custom_r64 : 187 218 255
 
#C header

h_default : 255 255 255
h_operators : 255 149 143
h_numbers : 255 197 143
h_strings : 209 241 169

h_custom_struct : 235 187 255
h_custom_typedef : 235 187 255
h_custom_for : 235 187 255
h_custom_while : 235 187 255
h_custom_switch : 235 187 255
h_custom_case : 235 187 255
h_custom_break : 235 187 255
h_custom_continue : 235 187 255
h_custom_default : 235 187 255
h_custom_return : 235 187 255
h_custom_if : 235 187 255
h_custom_union : 235 187 255

h_custom_int : 187 218 255
h_custom_char : 187 218 255
h_custom_short : 187 218 255
h_custom_long : 187 218 255
h_custom_void : 187 218 255

h_custom_u8 : 187 218 255
h_custom_u16 : 187 218 255
h_custom_u32 : 187 218 255
h_custom_u64 : 187 218 2555
h_custom_s8 : 187 218 255
h_custom_s16 : 187 218 255
h_custom_s32 : 187 218 255
h_custom_s64 : 187 218 255
h_custom_r32 : 187 218 255
h_custom_r64 : 187 218 255

#C++

cpp_default : 255 255 255
cpp_operators : 255 149 143
cpp_numbers : 255 197 143
cpp_strings : 209 241 169

cpp_custom_namespace : 235 187 255
cpp_custom_const : 235 187 255
cpp_custom_auto : 235 187 255
cpp_custom_class : 235 187 255
cpp_custom_struct : 235 187 255
cpp_custom_typedef : 235 187 255
cpp_custom_for : 235 187 255
cpp_custom_while : 235 187 255
cpp_custom_switch : 235 187 255
cpp_custom_case : 235 187 255
cpp_custom_break : 235 187 255
cpp_custom_continue : 235 187 255
cpp_custom_default : 235 187 255
cpp_custom_return : 235 187 255
cpp_custom_if : 235 187 255
cpp_custom_union : 235 187 255

cpp_custom_int : 187 218 255
cpp_custom_char : 187 218 255
cpp_custom_short : 187 218 255
cpp_custom_long : 187 218 255
cpp_custom_double : 187 218 255
cpp_custom_float : 187 218 255
cpp_custom_void : 187 218 255

cpp_custom_u8 : 187 218 255
cpp_custom_u16 : 187 218 255
cpp_custom_u32 : 187 218 255
cpp_custom_u64 : 187 218 2555
cpp_custom_s8 : 187 218 255
cpp_custom_s16 : 187 218 255
cpp_custom_s32 : 187 218 255
cpp_custom_s64 : 187 218 255
cpp_custom_r32 : 187 218 255
cpp_custom_r64 : 187 218 255

#C++ header

hpp_default : 255 255 255
hpp_operators : 255 149 143
hpp_numbers : 255 197 143
hpp_strings : 209 241 169

hpp_custom_namespace : 235 187 255
hpp_custom_const : 235 187 255
hpp_custom_auto : 235 187 255
hpp_custom_class : 235 187 255
hpp_custom_struct : 235 187 255
hpp_custom_typedef : 235 187 255
hpp_custom_for : 235 187 255
hpp_custom_while : 235 187 255
hpp_custom_switch : 235 187 255
hpp_custom_case : 235 187 255
hpp_custom_break : 235 187 255
hpp_custom_continue : 235 187 255
hpp_custom_default : 235 187 255
hpp_custom_return : 235 187 255
hpp_custom_if : 235 187 255
hpp_custom_union : 235 187 255

hpp_custom_int : 187 218 255
hpp_custom_void : 187 218 255
hpp_custom_char : 187 218 255
hpp_custom_short : 187 218 255
hpp_custom_long : 187 218 255
hpp_custom_double : 187 218 255
hpp_custom_float : 187 218 255

hpp_custom_u8 : 187 218 255
hpp_custom_u16 : 187 218 255
hpp_custom_u32 : 187 218 255
hpp_custom_u64 : 187 218 2555
hpp_custom_s8 : 187 218 255
hpp_custom_s16 : 187 218 255
hpp_custom_s32 : 187 218 255
hpp_custom_s64 : 187 218 255
hpp_custom_r32 : 187 218 255
hpp_custom_r64 : 187 218 255

#Java

java_default : 255 255 255
java_operators : 255 149 143
java_numbers : 255 197 143
java_strings : 209 241 169

java_custom_package : 235 187 255
java_custom_import : 235 187 255
java_custom_interface : 235 187 255
java_custom_class : 235 187 255
java_custom_for : 235 187 255
java_custom_while : 235 187 255
java_custom_switch : 235 187 255
java_custom_case : 235 187 255
java_custom_break : 235 187 255
java_custom_default : 235 187 255
java_custom_return : 235 187 255
java_custom_if : 235 187 255

java_custom_void : 187 218 255
java_custom_int : 187 218 255
java_custom_char : 187 218 255
java_custom_short : 187 218 255
java_custom_long : 187 218 255
java_custom_double : 187 218 255
java_custom_float : 187 218 255
java_custom_byte : 187 218 255

#JavaScript

js_default : 255 255 255
js_operators : 255 149 143
js_numbers : 255 197 143
js_strings : 209 241 169

js_custom_class : 235 187 255
js_custom_for : 235 187 255
js_custom_while : 235 187 255
js_custom_switch : 235 187 255
js_custom_case : 235 187 255
js_custom_break : 235 187 255
js_custom_default : 235 187 255
js_custom_return : 235 187 255
js_custom_if : 235 187 255

js_custom_var : 187 218 255
js_custom_let : 187 218 255